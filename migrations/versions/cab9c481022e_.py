"""empty message

Revision ID: cab9c481022e
Revises: 975e244fb0f1
Create Date: 2019-03-21 18:19:35.208744

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'cab9c481022e'
down_revision = '975e244fb0f1'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_notification_name', table_name='notification')
    op.drop_index('ix_notification_timestamp', table_name='notification')
    op.drop_table('notification')
    op.drop_index('ix_comments_timestamp', table_name='comments')
    op.drop_table('comments')
    op.drop_table('media')
    op.drop_table('blog')
    op.drop_table('postlikes')
    op.drop_index('ix_message_timestamp', table_name='message')
    op.drop_table('message')
    op.drop_table('links')
    op.drop_table('bloglikes')
    op.drop_index('ix_events_event_end_date', table_name='events')
    op.drop_index('ix_events_event_start_date', table_name='events')
    op.drop_table('events')
    op.drop_table('blogcommentlikes')
    op.drop_table('post')
    op.drop_index('ix_blogcomments_timestamp', table_name='blogcomments')
    op.drop_table('blogcomments')
    op.drop_table('commentlikes')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('commentlikes',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('comment_id', sa.INTEGER(), nullable=True),
    sa.Column('timestamp', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['comment_id'], ['comments.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('blogcomments',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('body', sa.TEXT(), nullable=True),
    sa.Column('body_html', sa.TEXT(), nullable=True),
    sa.Column('timestamp', sa.DATETIME(), nullable=True),
    sa.Column('disabled', sa.BOOLEAN(), nullable=True),
    sa.Column('author_id', sa.INTEGER(), nullable=True),
    sa.Column('blog_id', sa.INTEGER(), nullable=True),
    sa.CheckConstraint('disabled IN (0, 1)'),
    sa.ForeignKeyConstraint(['author_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['blog_id'], ['blog.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_blogcomments_timestamp', 'blogcomments', ['timestamp'], unique=False)
    op.create_table('post',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('city', sa.VARCHAR(length=50), nullable=False),
    sa.Column('category', sa.VARCHAR(length=50), nullable=False),
    sa.Column('story_line', sa.VARCHAR(length=500), nullable=False),
    sa.Column('story_text', sa.TEXT(), nullable=False),
    sa.Column('youtube_link', sa.VARCHAR(length=500), nullable=True),
    sa.Column('date_posted', sa.DATETIME(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('blogcommentlikes',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('blog_comment_id', sa.INTEGER(), nullable=True),
    sa.Column('timestamp', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['blog_comment_id'], ['blogcomments.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('events',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('event_name', sa.VARCHAR(), nullable=True),
    sa.Column('event_description', sa.VARCHAR(), nullable=True),
    sa.Column('event_location', sa.VARCHAR(), nullable=True),
    sa.Column('event_start_date', sa.DATETIME(), nullable=True),
    sa.Column('event_end_date', sa.DATETIME(), nullable=True),
    sa.Column('event_status', sa.BOOLEAN(), nullable=True),
    sa.CheckConstraint('event_status IN (0, 1)'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_events_event_start_date', 'events', ['event_start_date'], unique=False)
    op.create_index('ix_events_event_end_date', 'events', ['event_end_date'], unique=False)
    op.create_table('bloglikes',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('blog_id', sa.INTEGER(), nullable=True),
    sa.Column('timestamp', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['blog_id'], ['blog.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('links',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('facebook_id', sa.TEXT(), nullable=True),
    sa.Column('twitter_id', sa.TEXT(), nullable=True),
    sa.Column('instagram_id', sa.TEXT(), nullable=True),
    sa.Column('snapchat_id', sa.TEXT(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('message',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('sender_id', sa.INTEGER(), nullable=True),
    sa.Column('recipient_id', sa.INTEGER(), nullable=True),
    sa.Column('body', sa.VARCHAR(length=140), nullable=True),
    sa.Column('timestamp', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['recipient_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['sender_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_message_timestamp', 'message', ['timestamp'], unique=False)
    op.create_table('postlikes',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('post_id', sa.INTEGER(), nullable=True),
    sa.Column('timestamp', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['post.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('blog',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('blog_city', sa.VARCHAR(length=50), nullable=False),
    sa.Column('blog_category', sa.VARCHAR(length=50), nullable=False),
    sa.Column('blog_story_line', sa.VARCHAR(length=500), nullable=False),
    sa.Column('blog_story_text', sa.TEXT(), nullable=False),
    sa.Column('blog_youtube_link', sa.VARCHAR(length=500), nullable=True),
    sa.Column('blog_date_posted', sa.DATETIME(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('media',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('media_name', sa.VARCHAR(), nullable=True),
    sa.Column('media_format', sa.VARCHAR(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('comments',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('body', sa.TEXT(), nullable=True),
    sa.Column('body_html', sa.TEXT(), nullable=True),
    sa.Column('timestamp', sa.DATETIME(), nullable=True),
    sa.Column('disabled', sa.BOOLEAN(), nullable=True),
    sa.Column('author_id', sa.INTEGER(), nullable=True),
    sa.Column('post_id', sa.INTEGER(), nullable=True),
    sa.CheckConstraint('disabled IN (0, 1)'),
    sa.ForeignKeyConstraint(['author_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['post_id'], ['post.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_comments_timestamp', 'comments', ['timestamp'], unique=False)
    op.create_table('notification',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=128), nullable=True),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('timestamp', sa.FLOAT(), nullable=True),
    sa.Column('payload_json', sa.TEXT(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_notification_timestamp', 'notification', ['timestamp'], unique=False)
    op.create_index('ix_notification_name', 'notification', ['name'], unique=False)
    # ### end Alembic commands ###
